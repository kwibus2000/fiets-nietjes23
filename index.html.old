<!DOCTYPE html>
<html>

<head>
  <title>Interactive Map</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
  <style>
    #map {
      height: 400px;
      width: 100%;
    }

    #addressList {
      list-style-type: none;
      padding: 0;
    }

    .addressItem {
      margin-bottom: 5px;
    }

    .custom-marker-icon {
      color: #007BFF;
      font-size: 24px;
      line-height: 1;
    }
  </style>
</head>

<body>
  <h1>Interactive Map of Dordrecht</h1>
  <div id="map"></div>
  <button id="getAddressButton">Get Addresses</button>
  <button id="downloadButton">Download Addresses</button>
  <input type="file" id="uploadFile" accept=".txt" />
  <button id="uploadButton">Upload Addresses</button>
  <ul id="addressList"></ul>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const map = L.map('map').setView([51.813, 4.674], 13);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      const addressSet = new Set();

      function updateAddressList() {
        const addressList = document.getElementById('addressList');
        addressList.innerHTML = '';
        addressSet.forEach(address => {
          const listItem = document.createElement('li');
          listItem.textContent = address;
          listItem.classList.add('addressItem');
          addressList.appendChild(listItem);
        });
      }

      function addMarkerToMap(latLng, address) {
        const bicycleIcon = L.divIcon({
          className: 'custom-marker-icon',
          html: '<i class="fas fa-bicycle"></i>',
          iconSize: [32, 32],
          iconAnchor: [16, 32]
        });

        const marker = L.marker(latLng, { icon: bicycleIcon }).addTo(map);
        marker.bindPopup(address);
      }

      function uploadAddresses(file) {
        const reader = new FileReader();
        reader.onload = function (event) {
          const contents = event.target.result;
          const addresses = contents.split('\n');
          addresses.forEach(address => {
            if (address.trim() !== '') {
              addressSet.add(address);
              updateAddressList();
              getAddressCoordinates(address);
            }
          });
        };
        reader.readAsText(file);
      }

      function getAddressCoordinates(address) {
        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;

        fetch(url)
          .then(response => response.json())
          .then(data => {
            if (data.length > 0) {
              const lat = parseFloat(data[0].lat);
              const lon = parseFloat(data[0].lon);
              const latLng = L.latLng(lat, lon);
              addMarkerToMap(latLng, address);
            } else {
              console.log('Could not find coordinates for address:', address);
            }
          })
          .catch(error => {
            console.log('Error:', error);
          });
      }

      function getAddresses() {
        const addresses = [];
        addressSet.forEach(address => {
          addresses.push(address);
        });
        console.log(addresses);
      }

      function downloadAddresses() {
        const addresses = Array.from(addressSet).join('\n');
        const blob = new Blob([addresses], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = 'addresses.txt';
        link.click();
      }

      function handleFileUpload(event) {
        const file = event.target.files[0];
        if (file) {
          uploadAddresses(file);
        }
      }

      document.getElementById('getAddressButton').addEventListener('click', getAddresses);
      document.getElementById('downloadButton').addEventListener('click', downloadAddresses);
      document.getElementById('uploadFile').addEventListener('change', handleFileUpload);
    });
  </script>
</body>

</html>
